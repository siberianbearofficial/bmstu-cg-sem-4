"""
–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ1 –ø–æ –∫—É—Ä—Å—É "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –ì—Ä–∞—Ñ–∏–∫–∞"
–û—Ä–ª–æ–≤ –ê–ª–µ–∫—Å–µ–π (–ò–£7-34–ë)
"""

import sys

from PyQt6.QtCore import Qt
from PyQt6.QtWidgets import QMainWindow, QWidget, QHBoxLayout, QPushButton, QVBoxLayout, \
    QMessageBox, QApplication, QSizePolicy, QLabel

from canvas import Canvas
from point_dialog import PointDialog
from points_table import PointsTable

from figures.point import Point
from figures.triangle import Triangle, NoTriangleException


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle('–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏')
        self.setMinimumSize(1080, 720)

        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        layout = QHBoxLayout(central_widget)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(20)

        aside = QWidget()
        aside.setSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)
        aside.setMaximumWidth(400)
        aside_layout = QVBoxLayout(aside)
        aside_layout.setContentsMargins(0, 0, 0, 0)
        aside_layout.setSpacing(20)
        layout.addWidget(aside)

        buttons = QWidget()
        buttons_layout = QHBoxLayout(buttons)
        buttons_layout.setContentsMargins(0, 0, 0, 0)
        buttons_layout.setSpacing(10)
        buttons_layout.setAlignment(Qt.AlignmentFlag.AlignLeft)
        aside_layout.addWidget(buttons)

        self.task_button = QPushButton('üìì')
        self.task_button.setStyleSheet('background-color: rgba(0, 0, 255, 0.1); border: none; border-radius: 5px;')
        self.task_button.setCursor(Qt.CursorShape.PointingHandCursor)
        self.task_button.setFixedSize(40, 40)
        self.task_button.clicked.connect(self.task)
        buttons_layout.addWidget(self.task_button)

        self.add_point_button = QPushButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É ‚ûï')
        self.add_point_button.setStyleSheet('background-color: rgba(150, 100, 255, 0.1); border: none; border-radius: 5px; padding-left: 10px; padding-right: 10px;')
        self.add_point_button.setFixedHeight(40)
        self.add_point_button.setCursor(Qt.CursorShape.PointingHandCursor)
        self.add_point_button.clicked.connect(self.add)
        buttons_layout.addWidget(self.add_point_button)

        self.run_button = QPushButton('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å üñä')
        self.run_button.setStyleSheet('background-color: rgba(150, 100, 255, 0.1); border: none; border-radius: 5px; padding-left: 10px; padding-right: 10px;')
        self.run_button.setFixedHeight(40)
        self.run_button.setCursor(Qt.CursorShape.PointingHandCursor)
        self.run_button.clicked.connect(self.find)
        buttons_layout.addWidget(self.run_button)

        self.points_table = PointsTable()
        aside_layout.addWidget(self.points_table)

        self.clear_button = QPushButton('üßπ')
        self.clear_button.setStyleSheet('background-color: rgba(255, 150, 0, 0.1); border: none; border-radius: 5px;')
        self.clear_button.setCursor(Qt.CursorShape.PointingHandCursor)
        self.clear_button.setFixedSize(40, 40)
        self.clear_button.clicked.connect(self.points_table.clear)
        buttons_layout.addWidget(self.clear_button)

        self.result_label = QLabel()
        aside_layout.addWidget(self.result_label)

        main_widget = QWidget()
        main_widget.setStyleSheet('background-color: rgba(255, 255, 255, 0.1); border-radius: 5px;')
        main_widget_layout = QVBoxLayout(main_widget)
        main_widget_layout.setContentsMargins(0, 0, 0, 0)
        main_widget_layout.setSpacing(0)
        layout.addWidget(main_widget)

        self.canvas = Canvas(20)
        main_widget_layout.addWidget(self.canvas)

    def add(self):
        dialog = PointDialog()
        if dialog.exec():
            self.points_table.add(Point(*dialog.res))

    @staticmethod
    def task():
        msgbox = QMessageBox()
        msgbox.setWindowTitle("–£—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏")
        msgbox.setText("–ù–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ –¥–∞–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫. –ù–∞–π—Ç–∏ —Ç–∞–∫–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å –≤–µ—Ä—à–∏–Ω–∞–º–∏ " +
                       "–≤ —ç—Ç–∏—Ö —Ç–æ—á–∫–∞—Ö, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É–≥–æ–ª –º–µ–∂–¥—É –±–∏—Å—Å–µ–∫—Ç—Ä–∏—Å–æ–π –∏ –≤—ã—Å–æ—Ç–æ–π, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –∏–∑ –æ–¥–Ω–æ–π —Ç–æ—á–∫–∏, "
                       "–º–∞–∫—Å–∏–º–∞–ª–µ–Ω. –ü—Ä–∏ —ç—Ç–æ–º —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª—å—à–∏–π —Ç–∞–∫–æ–π —É–≥–æ–ª –∏–∑ –≤—Å–µ—Ö –≤–µ—Ä—à–∏–Ω –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.")
        msgbox.exec()

    def find(self):
        self.canvas.shapes = []
        points = []
        for point in self.points_table.points:
            x = float(point.x)
            y = float(point.y)
            p = Point(x, y)
            if p not in points:
                points.append(p)

        if len(points) < 3:
            self.not_enough_points()
        else:
            try:
                max_point, max_triangle, max_bisector, max_height, max_bisector_height_angle = Triangle.with_max_bisector_height_angle(points)
                self.canvas.draw(points, max_point, max_triangle, max_bisector, max_height)
                self.result_label.setText(f'–†–µ–∑—É–ª—å—Ç–∞—Ç:\n'
                                          f'–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫: '
                                          f'{points.index(max_triangle.p1) + 1} - {max_triangle.p1}, '
                                          f'{points.index(max_triangle.p2) + 1} - {max_triangle.p2}, '
                                          f'{points.index(max_triangle.p3) + 1} - {max_triangle.p3}\n'
                                          f'–í–µ—Ä—à–∏–Ω–∞: {max_point}\n'
                                          f'–£–≥–æ–ª: {max_bisector_height_angle:.2f} —Ä–∞–¥.')
            except NoTriangleException:
                self.no_triangle()
                self.result_label.setText('–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.')

    @staticmethod
    def not_enough_points():
        msgbox = QMessageBox()
        msgbox.setText("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å —Ö–æ—Ç—è –±—ã —Ç—Ä–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ—á–∫–∏.")
        msgbox.exec()

    @staticmethod
    def no_triangle():
        msgbox = QMessageBox()
        msgbox.setText("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ –≤—ã—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ.")
        msgbox.exec()


def main():
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    app.exec()


if __name__ == "__main__":
    main()
